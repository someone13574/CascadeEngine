#version 460

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

// bindings

layout (binding = 0) uniform Field_Data
{
    float step_size;

    float start_x;
    float start_y;
    float start_z;

    uint sample_count;

    uint padding_a;
    uint padding_b;
    uint padding_c;
} field_data;

struct Density_Data
{
    float density;

    float normal_x;
    float normal_y;
    float normal_z;
};

layout(std140, binding = 1) buffer density_field
{
    Density_Data densities[];
};

// functions
float Sample_Density(vec3 sample_position)
{
    float position_length = length(sample_position);
    sample_position /= position_length;

    float noise_a = sin(sample_position.x * 20.0) * sin(sample_position.y * 20.0) * sin(sample_position.z * 20.0) * 0.1;
    float noise_b = sin(sample_position.x * 40.0) * sin(sample_position.y * 40.0) * sin(sample_position.z * 40.0) * 0.05;

    return position_length - 1.8 + noise_a + noise_b;
}

uint Get_Output_Indices(ivec3 sample_index)
{
    uint major_index = gl_GlobalInvocationID.x + (gl_GlobalInvocationID.y * field_data.sample_count) + (gl_GlobalInvocationID.z * field_data.sample_count * field_data.sample_count);
    //uint minor_index = sample_index.z % 4;

    return major_index;
}

// kernel
void main()
{
    vec3 sample_position = vec3(field_data.start_x, field_data.start_y, field_data.start_z) + (vec3(gl_GlobalInvocationID.xyz) * field_data.step_size);

    float center_density = Sample_Density(sample_position);
    float x_density = Sample_Density(sample_position - vec3(0.00001, 0.0, 0.0));
    float y_density = Sample_Density(sample_position - vec3(0.0, 0.00001, 0.0));
    float z_density = Sample_Density(sample_position - vec3(0.0, 0.0, 0.00001));

    vec3 normal = normalize(vec3(center_density) - vec3(x_density, y_density, z_density));

    uint index = Get_Output_Indices(ivec3(gl_GlobalInvocationID.xyz));

    densities[index].density = center_density;
    densities[index].normal_x = normal.x;
    densities[index].normal_y = normal.y;
    densities[index].normal_z = normal.z;
}